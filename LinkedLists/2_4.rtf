{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red63\green127\blue95;\red127\green0\blue85;\red42\green0\blue255;
\red100\green70\blue50;\red0\green80\blue50;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf2 //Assumption :  Linked list is made of integers\cf0 \
\cf2 //Algorithm  :  doPartition : Assigns node less than a partition value\cf0 \
\cf2 //              on the left and the others on the right. \cf0 \
\cf2 //              Time Complexity : O(N) ; Space Complexity : O(1)\cf0 \
\pard\pardeftab720

\f1\b \cf3 using
\f0\b0 \cf0  
\f1\b \cf3 namespace
\f0\b0 \cf0  std;\

\f1\b \cf3 #include
\f0\b0 \cf0  \cf4 <iostream>\cf0 \
\pard\pardeftab720

\f1\b \cf3 \ul \ulc3 #include
\f0\b0 \cf0 \ulc0  \cf4 \ulc4 "LinkedList.h"\cf0 \ulnone \
\
\pard\pardeftab720

\f1\b \cf3 template
\f0\b0 \cf0  <
\f1\b \cf3 typename
\f0\b0 \cf0  
\f1\b \cf5 T
\f0\b0 \cf0 >\

\f1\b \cf3 class
\f0\b0 \cf0  \cf6 myClass\cf0  : 
\f1\b \cf3 public
\f0\b0 \cf0  \ul LinkedList<
\f1\b \cf5 \ulc5 T
\f0\b0 \cf0 \ulc0 >\ulnone  \{\
    
\f1\b \cf3 public
\f0\b0 \cf0  :\
            
\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b doPartition
\f0\b0 (
\f1\b \cf5 T
\f0\b0 \cf0  partition);\
\};\
\

\f1\b \cf3 template
\f0\b0 \cf0  <
\f1\b \cf3 typename
\f0\b0 \cf0  
\f1\b \cf5 T
\f0\b0 \cf0 >\

\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b myClass<T> :: doPartition
\f0\b0 (
\f1\b \cf5 T
\f0\b0 \cf0  partition) \{\
    \ul Node<
\f1\b \cf5 \ulc5 T
\f0\b0 \cf0 \ulc0 >\ulnone * n = 
\f1\b \cf3 this
\f0\b0 \cf0 ->\ul head\ulnone ;\
    \ul Node<
\f1\b \cf5 \ulc5 T
\f0\b0 \cf0 \ulc0 >\ulnone * temp;\
    
\f1\b \cf3 bool
\f0\b0 \cf0  skip = 
\f1\b \cf3 false
\f0\b0 \cf0 ;\
    
\f1\b \cf3 int
\f0\b0 \cf0  tempdata;\
    
\f1\b \cf3 while
\f0\b0 \cf0 (n->\ul next\ulnone  != NULL) \{\
        
\f1\b \cf3 if
\f0\b0 \cf0  (n->\ul next\ulnone ->\ul data\ulnone  < partition) \{\
            temp = n->\ul next\ulnone ;\
            tempdata = temp->\ul data\ulnone ;\
            n->\ul next\ulnone  = n->\ul next\ulnone ->\ul next\ulnone ;\
            skip = 
\f1\b \cf3 true
\f0\b0 \cf0 ;\
            
\f1\b \cf3 this
\f0\b0 \cf0 ->\ul deleteNode\ulnone (temp);  \cf2 //Delete the node\cf0 \
            
\f1\b \cf3 this
\f0\b0 \cf0 ->\ul insertNode\ulnone (tempdata); \cf2 //Insert at head (leftmost)\cf0 \
        \} 
\f1\b \cf3 else
\f0\b0 \cf0 \
            skip = 
\f1\b \cf3 false
\f0\b0 \cf0 ;\
        
\f1\b \cf3 if
\f0\b0 \cf0  (skip == 
\f1\b \cf3 false
\f0\b0 \cf0 )\
            n = n->\ul next\ulnone ;\
    \}\
\}\
\

\f1\b \cf3 int
\f0\b0 \cf0  
\f1\b main
\f0\b0 () \{\
    \cf6 myClass\cf0 <
\f1\b \cf3 int
\f0\b0 \cf0 > lis;\
    lis.\ul insertNode\ulnone (1);\
    lis.\ul insertNode\ulnone (2);\
    lis.\ul insertNode\ulnone (10);\
    lis.\ul insertNode\ulnone (5);\
    lis.\ul insertNode\ulnone (8);  \
    lis.\ul insertNode\ulnone (5);\
    lis.\ul insertNode\ulnone (3); \cf2 //This will be new head\cf0 \
    cout << \cf4 "Original List:"\cf0  << endl;\
    lis.\ul printLinkedList\ulnone ();\
    lis.doPartition(5);\
    cout << \cf4 "Partitioned List:"\cf0  << endl;\
    lis.\ul printLinkedList\ulnone ();\
    
\f1\b \cf3 return
\f0\b0 \cf0  0;\
\}\
}