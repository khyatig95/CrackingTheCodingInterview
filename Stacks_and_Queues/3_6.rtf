{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red63\green127\blue95;\red127\green0\blue85;\red42\green0\blue255;
\red0\green80\blue50;\red0\green0\blue192;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf2 //Algorithm :   Maintain 2 different queues of cat and dog. Maintain a\cf0 \
\cf2 //              global pointer of the oldest animal so far.\cf0 \
\
\pard\pardeftab720

\f1\b \cf3 using
\f0\b0 \cf0  
\f1\b \cf3 namespace
\f0\b0 \cf0  std;\

\f1\b \cf3 #include
\f0\b0 \cf0  \cf4 <iostream>\cf0 \
\pard\pardeftab720

\f1\b \cf3 \ul \ulc3 #include
\f0\b0 \cf0 \ulc0  \cf4 \ulc4 "Queue.h"\cf0 \ulnone \

\f1\b \cf3 \ul \ulc3 #include
\f0\b0 \cf0 \ulc0  \cf4 \ulc4 "LinkedList.h"\cf0 \ulnone \
\pard\pardeftab720

\f1\b \cf3 #include
\f0\b0 \cf0  \cf4 <string>\cf0 \
\

\f1\b \cf3 class
\f0\b0 \cf0  \cf5 AnimalInfo\cf0  \{\
    
\f1\b \cf3 public
\f0\b0 \cf0  : \
        \cf5 string\cf0  \cf6 name\cf0 ;\
        
\f1\b \cf3 int
\f0\b0 \cf0  \cf6 timestamp\cf0 ;\
\};\
\

\f1\b \cf3 class
\f0\b0 \cf0  \cf5 Animal\cf0  \{\
    
\f1\b \cf3 private
\f0\b0 \cf0  :\
        \ul Queue<\cf5 \ulc5 AnimalInfo\cf0 \ulc0 *>\ulnone  \cf6 cat\cf0 , \cf6 dog\cf0 ;\
        
\f1\b \cf3 int
\f0\b0 \cf0  \cf6 oldest\cf0  = 0;\
    
\f1\b \cf3 public
\f0\b0 \cf0  :\
        
\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b Enqueue
\f0\b0 (
\f1\b \cf3 bool
\f0\b0 \cf0  isDog, \cf5 string\cf0  val);\
        
\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b DequeueOldest
\f0\b0 ();\
        
\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b DequeueDog
\f0\b0 ();\
        
\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b DequeueCat
\f0\b0 ();\
        
\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b print
\f0\b0 ();\
\};\
\

\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b Animal :: Enqueue
\f0\b0 (
\f1\b \cf3 bool
\f0\b0 \cf0  isDog, \cf5 string\cf0  val) \{\
    \cf5 AnimalInfo\cf0 * ani = 
\f1\b \cf3 new
\f0\b0 \cf0  \cf5 AnimalInfo\cf0 ();\
    ani->\cf6 name\cf0  = val;\
    ani->\cf6 timestamp\cf0  = \cf6 oldest\cf0 ;\
\
    
\f1\b \cf3 if
\f0\b0 \cf0  (isDog) \{\
        cout << \cf4 "Enqueue dog "\cf0  << ani->\cf6 name\cf0  << \cf4 " with \cf4 \ul \ulc4 timestamp\cf4 \ulnone  "\cf0  << ani->\cf6 timestamp\cf0  << endl;\
        \cf6 dog\cf0 .\ul push\ulnone (ani);\
    \} 
\f1\b \cf3 else
\f0\b0 \cf0  \{ \
        cout << \cf4 "Enqueue cat "\cf0  << ani->\cf6 name\cf0  << \cf4 " with \cf4 \ul \ulc4 timestamp\cf4 \ulnone  "\cf0  << ani->\cf6 timestamp\cf0  << endl;\
        \cf6 cat\cf0 .\ul push\ulnone (ani);\
    \}\
    \cf6 oldest\cf0 ++;\
    \
\}\
\

\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b Animal :: DequeueDog
\f0\b0 () \{\
    cout << \cf4 "Dequeuing Dog : "\cf0  << \cf6 dog\cf0 .\ul peek\ulnone ()->\ul name\ulnone  << \cf4 " with \cf4 \ul \ulc4 timestamp\cf4 \ulnone  "\cf0  << \cf6 dog\cf0 .\ul peek\ulnone ()->\ul timestamp\ulnone  << \ul endl\ulnone ;\
    \cf6 dog\cf0 .\ul pop\ulnone ();\
\}\
\

\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b Animal :: DequeueCat
\f0\b0 () \{\
    cout << \cf4 "Dequeuing Cat : "\cf0  << \cf6 cat\cf0 .\ul peek\ulnone ()->\ul name\ulnone  << \cf4 " with \cf4 \ul \ulc4 timestamp\cf4 \ulnone  "\cf0  << \cf6 cat\cf0 .\ul peek\ulnone ()->\ul timestamp\ulnone  << \ul endl\ulnone ;\
    \cf6 cat\cf0 .\ul pop\ulnone ();\
\}\
\

\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b Animal :: DequeueOldest
\f0\b0 () \{\
    
\f1\b \cf3 if
\f0\b0 \cf0  (\cf6 cat\cf0 .\ul isEmpty\ulnone ()) \{\
        DequeueDog();\
        
\f1\b \cf3 return
\f0\b0 \cf0 ;\
    \} 
\f1\b \cf3 else
\f0\b0 \cf0  
\f1\b \cf3 if
\f0\b0 \cf0  (\cf6 dog\cf0 .\ul isEmpty\ulnone ()) \{\
        DequeueCat();\
        
\f1\b \cf3 return
\f0\b0 \cf0 ;\
    \}\
    \
    \cf5 AnimalInfo\cf0 * cat_temp = \cf6 cat\cf0 .\ul peek\ulnone ();\
    \cf5 AnimalInfo\cf0 * dog_temp = \cf6 dog\cf0 .\ul peek\ulnone ();\
    \cf5 AnimalInfo\cf0 * var;\
\
    cout << \cf4 "The cat \cf4 \ul \ulc4 timestamp\cf4 \ulnone  for "\cf0  << cat_temp->\cf6 name\cf0  << \cf4 " is "\cf0  << cat_temp->\cf6 timestamp\cf0  << \cf4 " and dog \cf4 \ul \ulc4 timestamp\cf4 \ulnone  for "\cf0  << dog_temp->\cf6 name\cf0  << \cf4 " is "\cf0  << dog_temp->\cf6 timestamp\cf0  << endl;\
    
\f1\b \cf3 if
\f0\b0 \cf0  (cat_temp->\cf6 timestamp\cf0  < dog_temp->\cf6 timestamp\cf0 ) \{\
        DequeueCat();\
        cout << \cf4 "Dequeued Cat "\cf0  << var->\cf6 name\cf0  << endl;\
     \} 
\f1\b \cf3 else
\f0\b0 \cf0  \{\
        DequeueDog();\
        cout << \cf4 "Dequeued Dog "\cf0  << var->\cf6 name\cf0  << endl;\
     \}\
\}\
\

\f1\b \cf3 void
\f0\b0 \cf0  
\f1\b Animal :: print
\f0\b0 () \{\
    cout << \cf4 "Cat List is "\cf0  << endl;\
    \cf6 cat\cf0 .\ul printQueue\ulnone ();\
    cout << \cf4 "Dog List is "\cf0  << endl;\
    \cf6 dog\cf0 .\ul printQueue\ulnone ();\
\}\
\

\f1\b \cf3 int
\f0\b0 \cf0  
\f1\b main
\f0\b0 () \{\
    \cf5 Animal\cf0  obj;\
    obj.Enqueue(
\f1\b \cf3 true
\f0\b0 \cf0 , \cf4 "dog0"\cf0 );\
    obj.Enqueue(
\f1\b \cf3 true
\f0\b0 \cf0 , \cf4 "dog1"\cf0 );\
    obj.Enqueue(
\f1\b \cf3 false
\f0\b0 \cf0 , \cf4 "cat0"\cf0 );\
    obj.Enqueue(
\f1\b \cf3 true
\f0\b0 \cf0 , \cf4 "dog2"\cf0 );\
    obj.Enqueue(
\f1\b \cf3 false
\f0\b0 \cf0 , \cf4 "cat1"\cf0 );\
    obj.Enqueue(
\f1\b \cf3 true
\f0\b0 \cf0 , \cf4 "dog3"\cf0 );\
\
    obj.DequeueCat();\
    obj.DequeueDog();\
    obj.DequeueCat();\
    obj.DequeueOldest();\
\
\}\
}